@{
  Layout = "_Layout";
}
@model DoctorsOffice.Models.Specialty;
<h1>Doctor's Specialty details</h1>
<br>

<h3>@Html.DisplayNameFor(model => model.SpecialtyName): @Html.DisplayFor(model => model.SpecialtyName)</h3>
@* <h3>@Html.DisplayNameFor(model => model.Specialty): @Html.DisplayFor(model => model.Specialty)</h3> *@

@if(Model.Doctors.Count == 0)
{
  <p>This specialty does not have any doctors currently assigned.</p>
}
else
{
  <h4>Doctors currently under care:</h4>
  <ul>
  @foreach(var join in Model.Doctors)
  {
    <li>@Html.ActionLink($"{join.Doctor.Name}", "Details", "Doctors", new { id = join.Doctor.DoctorId })</li>
    @using (Html.BeginForm("DeleteDoctor", "Specialtys"))
    {
      @Html.Hidden("joinId", @join.DoctorSpecialtyId)
      <input type="submit" value="Delete" class="btn btn-warning btn-xs" />
    }
  }
  </ul>
}
<br>
<p>@Html.ActionLink("Edit Specialty", "Edit", null, new { id = Model.SpecialtyId } , new {@class="btn btn-success btn-sm"})</p>
<p>@Html.ActionLink("Add a Doctor", "AddDoctor", "Specialties", new { id = Model.SpecialtyId } , new {@class="btn btn-success btn-sm"})</p>
<p>@Html.ActionLink("Delete Specialty", "Delete", new { id = Model.SpecialtyId }, new {@class="btn btn-danger btn-sm"})</p>
<p>@Html.ActionLink("Back to Specialties", "Index", null, null, new {@class="btn btn-primary btn-sm"})</p>